name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: service
        ports:
          - "5432:5432"
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:latest
        ports:
          - "6379:6379"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest pytest-cov black flake8 mypy

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

      - name: Create .env file
        run: |
          touch .env
          echo "AUTH0_DOMAIN=${{ secrets.AUTH0_DOMAIN }}" >> .env
          echo "AUTH0_API_AUDIENCE=${{ secrets.AUTH0_API_AUDIENCE }}" >> .env
          echo "AUTH0_ISSUER=${{ secrets.AUTH0_ISSUER }}" >> .env
          echo "AUTH0_ALGORITHMS=${{ secrets.AUTH0_ALGORITHMS }}" >> .env
          echo "POSTGRES_USER=postgres" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DB=service" >> .env
          echo "POSTGRES_HOST=localhost" >> .env
          echo "POSTGRES_PORT=5432" >> .env
          echo "REDIS_HOST=localhost" >> .env
          echo "REDIS_PORT=6379" >> .env
          echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> .env
          echo "AFRICASTALKING_USERNAME=${{ secrets.AFRICASTALKING_USERNAME }}" >> .env

      - name: Load environment variables
        run: export $(grep -v '^#' .env | xargs)

      - name: Run tests with coverage
        env:
          AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
          AUTH0_API_AUDIENCE: ${{ secrets.AUTH0_API_AUDIENCE }}
          AUTH0_ISSUER: ${{ secrets.AUTH0_ISSUER }}
          AUTH0_ALGORITHMS: ${{ secrets.AUTH0_ALGORITHMS }}
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: service
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          AFRICASTALKING_USERNAME: ${{ secrets.AFRICASTALKING_USERNAME }}
          DATABASE_URL: postgresql://postgres:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/service
          REDIS_URL: redis://localhost:6379
        run: pytest --maxfail=5 --disable-warnings --cov=app

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install linting & formatting tools
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 

      - name: Run Black (format check)
        run: black --check .

      - name: Run Flake8 (linting)
        run: flake8 . --max-line-length=79 --ignore=E203,W503
